<?php

namespace ContainerGKeZskT;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getDoctrine_Dbal_CustomerConnectionService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'doctrine.dbal.customer_connection' shared service.
     *
     * @return \Doctrine\DBAL\Connection
     */
    public static function do($container, $lazyLoad = true)
    {
        $a = new \Doctrine\DBAL\Configuration();

        $b = new \Doctrine\DBAL\Logging\LoggerChain();
        $b->addLogger(($container->privates['doctrine.dbal.logger'] ?? $container->getDoctrine_Dbal_LoggerService()));
        $b->addLogger(($container->privates['doctrine.dbal.logger.profiling.customer'] ?? ($container->privates['doctrine.dbal.logger.profiling.customer'] = new \Doctrine\DBAL\Logging\DebugStack())));

        $a->setSQLLogger($b);
        $c = new \Symfony\Bridge\Doctrine\ContainerAwareEventManager($container);
        $c->addEventSubscriber(($container->privates['doctrine.orm.listeners.pdo_cache_adapter_doctrine_schema_subscriber'] ?? ($container->privates['doctrine.orm.listeners.pdo_cache_adapter_doctrine_schema_subscriber'] = new \Symfony\Bridge\Doctrine\SchemaListener\PdoCacheAdapterDoctrineSchemaSubscriber([]))));

        return $container->services['doctrine.dbal.customer_connection'] = ($container->privates['doctrine.dbal.connection_factory'] ?? ($container->privates['doctrine.dbal.connection_factory'] = new \Doctrine\Bundle\DoctrineBundle\ConnectionFactory([])))->createConnection(['url' => $container->getEnv('DATABASE_CUSTOMER_URL'), 'driver' => 'pdo_mysql', 'charset' => 'utf8mb4', 'host' => 'localhost', 'port' => NULL, 'user' => 'root', 'password' => NULL, 'driverOptions' => [], 'serverVersion' => '5.7', 'defaultTableOptions' => []], $a, $c, []);
    }
}
